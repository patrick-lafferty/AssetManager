<Window x:Class="Glitch2.MaterialEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Glitch2"
        Title="MaterialEditor" Width="900" Height="600"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <local:ParameterTemplateSelector x:Key="ParameterTemplateSelector" />
        
        <DataTemplate x:Key="ScalarTemplate">
            <TextBox Text="{Binding Value}"/>
        </DataTemplate>

        <DataTemplate x:Key="Vector2Template">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="x:"/>
                <TextBox Text="{Binding X}" />

                <TextBlock Text="y:"/>
                <TextBox Text="{Binding Y}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="Vector3Template">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="x:"/>
                <TextBox Text="{Binding X}" />

                <TextBlock Text="y:"/>
                <TextBox Text="{Binding Y}" />

                <TextBlock Text="z:"/>
                <TextBox Text="{Binding Z}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="Vector4Template">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="x:"/>
                <TextBox Text="{Binding X}" />

                <TextBlock Text="y:"/>
                <TextBox Text="{Binding Y}" />

                <TextBlock Text="z:"/>
                <TextBox Text="{Binding Z}" />

                <TextBlock Text="w:"/>
                <TextBox Text="{Binding W}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ArrayTemplate">
            <ListBox ItemsSource="{Binding Elements}" ItemTemplate="{StaticResource ResourceKey=Vector4Template}"
                     SelectedItem="{Binding SelectedElement, UpdateSourceTrigger=PropertyChanged}">
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add array element">
                            <MenuItem Header="float4" Click="AddArrayParameterElementFloat4"/>
                            <MenuItem Header="int4" Click="AddArrayParameterElementInt4"/>
                            <MenuItem Header="bool4" Click="AddArrayParameterElementBool4"/>
                        </MenuItem>
                        <MenuItem Header="Remove selected array element" Click="RemoveArrayParameterElement" />
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>
        </DataTemplate>
            
    </Window.Resources>
    
    <TabControl>        
        
        <TabItem Header="Material">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Text="Name"/>
                <TextBox Text="{Binding asset.Name}"                          
                             Grid.Column="1"/>
                <TextBlock Text="Description"
                               Grid.Row="2"/>
                <TextBox Text="{Binding asset.Description}"                          
                             Grid.Row="2"
                             Grid.Column="1"
                             
                             AcceptsReturn="True"
                             Height="200"
                             ScrollViewer.VerticalScrollBarVisibility="Visible"/>
                
                <Button Content="Save" 
                        Click="Save"
                        Grid.Row="4"/>

            </Grid>
        </TabItem>
        
        <TabItem Header="Shaders">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="70"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="70"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="70"/>
                </Grid.RowDefinitions>

                <RadioButton Content="Vertex+Pixel"
                             Grid.Row="0"
                             x:Name="VertexPixel"
                             Checked="CombinationSelected"
                            />

                <StackPanel Grid.Row="1" Margin="30,0,0,0"
                            Visibility="{Binding VertexPixelVisible}">
                    <StackPanel Orientation="Horizontal"
                            
                            IsEnabled="{Binding VertexEnabled}">
                        <TextBlock Text="Vertex"/>
                        <ComboBox ItemsSource="{Binding AvailableVertexShaders}"
                              SelectedItem="{Binding asset.VertexShader}"
                              DisplayMemberPath="Name"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"                            
                            IsEnabled="{Binding PixelEnabled}">
                        <TextBlock Text="Pixel"/>
                        <ComboBox ItemsSource="{Binding AvailablePixelShaders}"
                              SelectedItem="{Binding asset.PixelShader}"
                              DisplayMemberPath="Name"/>
                    </StackPanel>
                </StackPanel>

                <RadioButton Content="Vertex+Geometry+Pixel"
                             Grid.Row="2" x:Name="VertexGeometryPixel"
                             Checked="CombinationSelected"/>

                <StackPanel Grid.Row="3" Margin="30,0,0,0"
                            Visibility="{Binding VertexGeometryPixelVisible}">
                    <StackPanel Orientation="Horizontal"
                            
                            IsEnabled="{Binding VertexEnabled}">
                        <TextBlock Text="Vertex"/>
                        <ComboBox ItemsSource="{Binding AvailableVertexShaders}"
                              SelectedItem="{Binding asset.VertexShader}"
                              DisplayMemberPath="Name"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"                            
                            IsEnabled="{Binding GeometryEnabled}">
                        <TextBlock Text="Geometry"/>
                        <ComboBox ItemsSource="{Binding AvailableGeometryShaders}"
                              SelectedItem="{Binding asset.GeometryShader}"
                              DisplayMemberPath="Name"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"                            
                            IsEnabled="{Binding PixelEnabled}">
                        <TextBlock Text="Pixel"/>
                        <ComboBox ItemsSource="{Binding AvailablePixelShaders}"
                              SelectedItem="{Binding asset.PixelShader}"
                              DisplayMemberPath="Name"/>
                    </StackPanel>
                </StackPanel>

                <RadioButton Content="Vertex+Geometry"
                             Grid.Row="4" x:Name="VertexGeometry"
                             Checked="CombinationSelected"/>

                <StackPanel Grid.Row="5" Margin="30,0,0,0"
                            Visibility="{Binding VertexGeometryVisible}">
                    <StackPanel Orientation="Horizontal"
                            
                            IsEnabled="{Binding VertexEnabled}">
                        <TextBlock Text="Vertex"/>
                        <ComboBox ItemsSource="{Binding AvailableVertexShaders}"
                              SelectedItem="{Binding asset.VertexShader}"
                              DisplayMemberPath="Name"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"                            
                            IsEnabled="{Binding GeometryEnabled}">
                        <TextBlock Text="Geometry"/>
                        <ComboBox ItemsSource="{Binding AvailableGeometryShaders}"
                              SelectedItem="{Binding asset.GeometryShader}"
                              DisplayMemberPath="Name"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </TabItem>
    
        <TabItem Header="Resources">
            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Textures"/>
                
                <DataGrid ItemsSource="{Binding asset.Textures, Mode=TwoWay}" 
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      Grid.Column="1"
                      SelectedItem="{Binding SelectedTexture}"
                      >
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Remove this texture" Click="RemoveSelectedTexture"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="SRV Name" Binding="{Binding ShaderResourceViewName, Mode=TwoWay}" />

                        <DataGridTemplateColumn Header="Source">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding AvailableTextures, RelativeSource={RelativeSource AncestorType=Window}}"  SelectedItem="{Binding Source}" DisplayMemberPath="Name"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
                
                <Button Content="Add texture" Click="AddTexture"
                        Grid.Column="2"/>
                
                <TextBlock Text="Samplers" 
                           Grid.Row="2"/>

                <DataGrid ItemsSource="{Binding asset.Samplers}"
                        AutoGenerateColumns="True"
                        CanUserAddRows="False"
                        CanUserDeleteRows="False" 
                        Grid.Row="2" Grid.Column="1"
                        SelectedItem="{Binding SelectedSampler}">
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Remove this sampler" Click="RemoveSelectedSampler"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>

                <Button Content="Add sampler" Click="AddSampler"
                        Grid.Row="2"
                        Grid.Column="2"/>
                
            </Grid>
        </TabItem>
        
        <TabItem Header="Blend State">
            <Grid>
                
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
            
                <DataGrid ItemsSource="{Binding asset.BlendState.RenderTargets}"
                          AutoGenerateColumns="True"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          SelectedItem="{Binding SelectedRenderTarget}"
                          >
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Remove this render target" Click="RemoveSelectedRenderTarget" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
                
                <Button Content="Add render target" Click="AddRenderTarget"
                        Grid.Row="1"/>
                
            </Grid>
        </TabItem>

        <TabItem Header="Depth Stencil State">
            <Grid DataContext="{Binding asset.DepthStencilState}">

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />                    
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Text="Enable depth testing" />
                <CheckBox IsChecked="{Binding DepthEnable}"
                          Grid.Column="1"/>
                
                <TextBlock Text="Depth write mask"
                           Grid.Row="1"/>
                <ComboBox ItemsSource="{Binding AvailableDepthWriteMasks, RelativeSource={RelativeSource AncestorType=local:MaterialEditor}}"
                          SelectedItem="{Binding DepthWriteMask}"
                          Grid.Row="1"
                          Grid.Column="1"/>
                
                <TextBlock Text="Depth comparison function"
                           Grid.Row="2"
                           />
                <ComboBox ItemsSource="{Binding AvailableDepthFuncs, RelativeSource={RelativeSource AncestorType=local:MaterialEditor}}"
                          SelectedItem="{Binding DepthFunc}"
                          Grid.Row="2"
                          Grid.Column="1"/>

            </Grid>
        </TabItem>

        <TabItem Header="Parameters">
            <Grid>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition />                                  
                </Grid.RowDefinitions>
                
                <Button Content="New group" Click="NewParameterGroup"/>

                <ListBox ItemsSource="{Binding asset.ParameterGroups}" ScrollViewer.CanContentScroll="False"
                        SelectedItem="{Binding SelectedParameterGroup}"
                         Grid.Row="1"
                        >
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Delete this parameter group" Click="RemoveParameterGroup" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Style.Triggers>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="IsSelected" Value="True" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <ItemContainerTemplate>
                            <StackPanel Width="400">

                                <TextBox Text="{Binding Name}" />
                                <ListBox ItemsSource="{Binding Parameters}"
                                        SelectedItem="{Binding SelectedParameter}"
                                        MinHeight="20"
                                        Margin="15,0,0,0">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Style.Triggers>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="IsSelected" Value="True" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Add parameter" Click="AddParameter" />
                                            <MenuItem Header="Remove selected parameter" Click="RemoveParameter" />
                                            <Separator />
                                            <MenuItem Header="Delete this parameter group" Click="RemoveParameterGroup" />
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                    
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name}" />
                                                <TextBlock Text="{Binding Type}" Margin="10,0,0,0"/>
                                                <ContentPresenter DataContext="{Binding}"  Margin="10,0,0,0"
                                                                      ContentTemplateSelector="{StaticResource ResourceKey=ParameterTemplateSelector}"
                                                                      />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>                                    
                                
                                </ListBox>
                                
                            </StackPanel>
                        </ItemContainerTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                
            </Grid>
        </TabItem>
        
    </TabControl>   
</Window>
